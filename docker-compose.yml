version: '3.3'
networks:
  tick:
services:
  influxdb:
    image: influxdb:2.4
    networks:
      - tick
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      #- ./influxdb.conf:/etc/influxdb/influxdb.conf
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    restart: unless-stopped
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:8086
  # chronograf:
  #   image: chronograf:latest
  #   ports:
  #     - '127.0.0.1:8888:8888'
  #   volumes:
  #     - chronograf-storage:/var/lib/chronograf
  #   depends_on:
  #     - influxdb
  #   environment:
  #     - INFLUXDB_URL=http://influxdb:8086
  #     - INFLUXDB_DB=android
  #     - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
  #     - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #     - ./grafana-provisioning/:/etc/grafana/provisioning
  #   depends_on:
  #     - influxdb
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - "mongodata:/data/db"
  
  falcon-api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - '8081:8081'
    volumes:
      - ./:/usr/api
      - ./logs/:/usr/api/logs
    links:
     - mongodb
  
  nginx:
    image: nginx:latest
    volumes:
      - ./assets/nginx/nginx.http.config:/etc/nginx/nginx.conf
      #- ./assets/nginx/certs:/etc/nginx/certs
      - static_volume:/usr/api/src/static
    ports:
      # - "443:443"
      - "81:81"
    depends_on:
      - falcon-api
    restart:
      on-failure:5

volumes:
  mongodata:
  # chronograf-storage:
  # grafana-storage:
  static_volume:
  influxdb-storage:
