version: '3.3'
networks:
  beam-network:
    
services:
  influxdb:
    container_name: influxdb
    image: influxdb:2.4
    networks:
      - beam-network
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      - ./influxdb.conf:/etc/influxdb/influxdb.conf
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    restart: unless-stopped
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:8086

  rabbitmqServer:
    container_name: rabbitmqServer
    image: "rabbitmq:3.6-management-alpine"
    hostname: "rabbitmq-host"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq/logs:/var/log/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - beam-network

  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile.consumer
    restart: always
    depends_on:
      - rabbitmqServer
    ports:
      - 8000:8000
    env_file: .env
    networks:
      - beam-network

  client: 
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "3000:3000"
    networks:
      - beam-network
    restart: unless-stopped
    depends_on:
      - falcon-api

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - beam-network
    restart: unless-stopped
    volumes:
      - ./init-mongodb:/docker-entrypoint-initdb.d
      - ./init-mongodb/data:/tmp/data
    env_file:
      - .env
      
  falcon-api:
    container_name: falcon-api
    build:
      context: ./api
      dockerfile: Dockerfile.api
    ports:
      - '8081:8081'
    networks:
      - beam-network
    volumes:
      - ./api/app:/usr/api/app
      - ./api/logs:/usr/api/logs
    depends_on:
      - mongodb
      - rabbitmqServer
    restart: unless-stopped
    env_file:
      - .env
    links:
     - mongodb

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:15.0.2
    environment:
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - DB_VENDOR=h2
    networks:
      - beam-network
    ports:
      - 8080:8080

      
  # nginx:
  #   container_name: nginx-container
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx/nginx.http.config:/etc/nginx/nginx.conf
  #     #- ./assets/nginx/certs:/etc/nginx/certs
  #     # - ./webapp/build:/usr/share/nginx/html
  #   ports:
  #     - "81:81"
  #   depends_on:
  #     - falcon-api
  #     - client
  #   networks:
  #     - tick
  #   restart:
  #     unless-stopped


volumes:
  mongodata:
  chronograf-storage:
  grafana-storage:
  static_volume:
  influxdb-storage:


